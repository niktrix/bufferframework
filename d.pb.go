// Code generated by protoc-gen-go. DO NOT EDIT.
// source: d.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Req struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	SignedData           []byte   `protobuf:"bytes,3,opt,name=signedData,proto3" json:"signedData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_9072588c7ee60ae2, []int{0}
}

func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (m *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(m, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

func (m *Req) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Req) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Req) GetSignedData() []byte {
	if m != nil {
		return m.SignedData
	}
	return nil
}

type Res struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Res) Reset()         { *m = Res{} }
func (m *Res) String() string { return proto.CompactTextString(m) }
func (*Res) ProtoMessage()    {}
func (*Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_9072588c7ee60ae2, []int{1}
}

func (m *Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Res.Unmarshal(m, b)
}
func (m *Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Res.Marshal(b, m, deterministic)
}
func (m *Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Res.Merge(m, src)
}
func (m *Res) XXX_Size() int {
	return xxx_messageInfo_Res.Size(m)
}
func (m *Res) XXX_DiscardUnknown() {
	xxx_messageInfo_Res.DiscardUnknown(m)
}

var xxx_messageInfo_Res proto.InternalMessageInfo

func (m *Res) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Req)(nil), "protobuf.Req")
	proto.RegisterType((*Res)(nil), "protobuf.Res")
}

func init() { proto.RegisterFile("d.proto", fileDescriptor_9072588c7ee60ae2) }

var fileDescriptor_9072588c7ee60ae2 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x62, 0x4f, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0x9e, 0x5c, 0xcc, 0x41, 0xa9,
	0x85, 0x42, 0x02, 0x5c, 0xcc, 0x79, 0xa5, 0xb9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x20,
	0x26, 0x48, 0x24, 0x3b, 0xb5, 0x52, 0x82, 0x49, 0x81, 0x51, 0x83, 0x27, 0x08, 0xc4, 0x14, 0x92,
	0xe3, 0xe2, 0x2a, 0xce, 0x4c, 0xcf, 0x4b, 0x4d, 0x71, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x06, 0x4b,
	0x20, 0x89, 0x28, 0xc9, 0x82, 0x8c, 0x2a, 0x16, 0x12, 0xe3, 0x62, 0x2b, 0x4a, 0x2d, 0x2e, 0xcd,
	0x29, 0x81, 0x9a, 0x06, 0xe5, 0x19, 0x19, 0x72, 0xb1, 0xb8, 0x65, 0xe6, 0xa5, 0x08, 0x69, 0x72,
	0x31, 0xfb, 0x26, 0x56, 0x08, 0xf1, 0xea, 0xc1, 0xdc, 0xa0, 0x17, 0x94, 0x5a, 0x28, 0x85, 0xc2,
	0x2d, 0x56, 0x62, 0xd0, 0x60, 0x34, 0x60, 0x4c, 0x62, 0x03, 0x8b, 0x19, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xd7, 0x3f, 0x1a, 0xf4, 0xb8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FindClient is the client API for Find service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FindClient interface {
	Max(ctx context.Context, opts ...grpc.CallOption) (Find_MaxClient, error)
}

type findClient struct {
	cc *grpc.ClientConn
}

func NewFindClient(cc *grpc.ClientConn) FindClient {
	return &findClient{cc}
}

func (c *findClient) Max(ctx context.Context, opts ...grpc.CallOption) (Find_MaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Find_serviceDesc.Streams[0], "/protobuf.Find/Max", opts...)
	if err != nil {
		return nil, err
	}
	x := &findMaxClient{stream}
	return x, nil
}

type Find_MaxClient interface {
	Send(*Req) error
	Recv() (*Res, error)
	grpc.ClientStream
}

type findMaxClient struct {
	grpc.ClientStream
}

func (x *findMaxClient) Send(m *Req) error {
	return x.ClientStream.SendMsg(m)
}

func (x *findMaxClient) Recv() (*Res, error) {
	m := new(Res)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FindServer is the server API for Find service.
type FindServer interface {
	Max(Find_MaxServer) error
}

// UnimplementedFindServer can be embedded to have forward compatible implementations.
type UnimplementedFindServer struct {
}

func (*UnimplementedFindServer) Max(srv Find_MaxServer) error {
	return status.Errorf(codes.Unimplemented, "method Max not implemented")
}

func RegisterFindServer(s *grpc.Server, srv FindServer) {
	s.RegisterService(&_Find_serviceDesc, srv)
}

func _Find_Max_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FindServer).Max(&findMaxServer{stream})
}

type Find_MaxServer interface {
	Send(*Res) error
	Recv() (*Req, error)
	grpc.ServerStream
}

type findMaxServer struct {
	grpc.ServerStream
}

func (x *findMaxServer) Send(m *Res) error {
	return x.ServerStream.SendMsg(m)
}

func (x *findMaxServer) Recv() (*Req, error) {
	m := new(Req)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Find_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Find",
	HandlerType: (*FindServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Max",
			Handler:       _Find_Max_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "d.proto",
}
